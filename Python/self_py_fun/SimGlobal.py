import numpy as np
import os  # do not delete
import sys

# parent_path_sim_dir  = '/Users/niubilitydiu/Desktop/BSM-Code-V2'

sim_multi_24_bool = True
if sim_multi_24_bool:
    target_char = 'TTTTTTTT'
    target_char_size = len(target_char)
    seq_source_size = 10
    signal_length = 25
    log_lhd_diff_approx = 2.0
else:
    # single-channel simulation global constants
    target_char = 'TTT'
    target_char_size = len(target_char)
    seq_source_size = 10
    signal_length = 35
    log_lhd_diff_approx = 5.0

sim_rcp_array = ['A', 'B', 'C', 'D', 'E', 'F',
                 'G', 'H', 'I', 'J', 'K', 'L',
                 'M', 'N', 'O', 'P', 'Q', 'R',
                 'S', 'T', 'U', 'V', 'W', 'X',
                 'Y', 'Z', '1', '2', '3', '4',
                 '5', '6', '7', '8', '9', '0']
# parent_path_local = '/Users/niubilitydiu/Dropbox (University of Michigan)/Dissertation/' \
#                     'Dataset and Rcode/EEG_MATLAB_data'
# parent_path_slurm = '/home/mtianwen/EEG_MATLAB_data'


channel_name_short = [
    'F3', 'Fz', 'F4', 'T7', 'C3', 'Cz', 'C4', 'T8',
    'CP3', 'CP4', 'P3', 'Pz', 'P4', 'PO7', 'PO8', 'Oz'
]

rcp_unit_flash_num = 12
rcp_char_size = 36
rcp_screen = np.reshape(np.arange(0, rcp_char_size), [6, 6]) + 1
stimulus_group_set = [
    rcp_screen[0, :], rcp_screen[1, :], rcp_screen[2, :], rcp_screen[3, :], rcp_screen[4, :], rcp_screen[5, :],
    rcp_screen[:, 0], rcp_screen[:, 1], rcp_screen[:, 2], rcp_screen[:, 3], rcp_screen[:, 4], rcp_screen[:, 5]
]

num_warmup_numpyro = 2000
num_samples_numpyro = 200

rcp_function_smooth_dict_1 = {
    'group_0': {
        'target': np.array([-0.1578, -0.442605, -0.72741, -0.87525, -0.7899, -0.4074, 0.27294, 1.15902, 2.0724, 2.8053,
                            3.19116, 3.168, 2.7714, 2.1162, 1.359, 0.651, 0.0785999999999997, -0.318, -0.5412, -0.6198,
                            -0.598200000000001, -0.513, -0.4014, -0.2862, -0.183, -0.102, -0.0494592592592597, -0.0188592592592597,
                            -0.00445925925925965, -0.000259259259259793, -0.000259259259260232, -1.78641836405895e-15,
                            -3.16737818243606e-15, -2.43582527904765e-15, -1.70427237565924e-15]),
        'non-target': np.array([0.09208, 0.23597, 0.37986, 0.44774, 0.40096, 0.22596, -0.0760799999999998, -0.44384,
                                -0.79984, -1.06712, -1.20796, -1.19848, -1.05468, -0.81148, -0.51656, -0.20572,
                                0.0887599999999996, 0.3338, 0.507, 0.59704, 0.60524, 0.54376, 0.43808, 0.31428,
                                0.19868, 0.1086, 0.0495575308641972, 0.0167975308641972, 0.0033975308641972,
                                0.000197530864197204, 0.0001975308641972, -3.13946720986313e-16,
                                -3.31961802867993e-16, 1.73845400416598e-15, 3.80886981119995e-15])
    },
    'group_1': {
        'target': np.array([0.1578, 0.442605, 0.72741, 0.87525, 0.7899, 0.4074, -0.27294, -1.15902, -2.0724, -2.8053,
                            -3.19116, -3.168, -2.7714, -2.1162, -1.359, -0.651, -0.0785999999999997, 0.318, 0.5412,
                            0.6198, 0.598200000000001, 0.513, 0.4014, 0.2862, 0.183, 0.102, 0.0494592592592597,
                            0.0188592592592597, 0.00445925925925965, 0.000259259259259793, 0.000259259259260232,
                            1.78641836405895e-15, 3.16737818243606e-15, 2.43582527904765e-15, 1.70427237565924e-15]),
        'non-target': np.array([-0.09208, -0.23597, -0.37986, -0.44774, -0.40096, -0.22596, 0.0760799999999998,
                                0.44384, 0.79984, 1.06712, 1.20796, 1.19848, 1.05468, 0.81148, 0.51656, 0.20572,
                                -0.0887599999999996, -0.3338, -0.507, -0.59704, -0.60524, -0.54376, -0.43808,
                                -0.31428, -0.19868, -0.1086, -0.0495575308641972, -0.0167975308641972,
                                -0.0033975308641972, -0.000197530864197204, -0.0001975308641972, 3.13946720986313e-16,
                                3.31961802867993e-16, -1.73845400416598e-15, -3.80886981119995e-15])
    },
    'group_2': {
        'target': np.array([-1.13618158377283e-15, -1.6238835193651e-15, -2.11158545495738e-15, -1.1909455760393e-15,
                            -0.000172839506173488, -0.000172839506173195, -0.0029728395061731, -0.0125728395061731,
                            -0.0329728395061731, -0.0680000000000003, -0.122, -0.1908, -0.2676, -0.342, -0.3988,
                            -0.4132, -0.3608, -0.212, 0.0523999999999998, 0.434, 0.906, 1.4108, 1.8476, 2.112, 2.12744,
                            1.8702, 1.3816, 0.77268, 0.18196, -0.2716, -0.5266, -0.5835, -0.48494, -0.29507, -0.1052]),
        'non-target': np.array([2.53924654079997e-15, 1.15896933611065e-15, -2.21307868578662e-16,
                                -2.09297813990875e-16, 0.000131687242798133, 0.000131687242798136, 0.00226502057613147,
                                0.0111983539094648, 0.0330383539094648, 0.0723999999999998, 0.132453333333333, 0.20952,
                                0.292053333333333, 0.362506666666666, 0.403493333333333, 0.398026666666666, 0.338,
                                0.222533333333333, 0.0591733333333331, -0.137146666666667, -0.344373333333334,
                                -0.540986666666667, -0.70312, -0.798986666666667, -0.805306666666667,
                                -0.711413333333333, -0.533226666666667, -0.295893333333333, -0.0507199999999999,
                                0.15064, 0.267306666666667, 0.298493333333333, 0.25324, 0.157313333333333, 0.061386667])
    }
}

